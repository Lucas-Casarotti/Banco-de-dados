--TRANSACTION


-- COMANDO BEGIN TRANSACTION 
--É UMA ZONA SEGURA,NELA VOCE PODE FAZER AS ALTERAÇÕES, ATUALIZAÇÕES E DELETES, TUDO O QUE QUISER DENTRO DE UMA TABELA
--SEM QUE ESSA TABELA SOFRA ESSA ALTERAÇÕES O QUE VAI DETERMINAR SE ESSAS ALTERAÇÕES VÃO SER DEFINIDAS, VAI SER O COMANDO FINAL.

--COMANDO COMMIT
--NA QUESTÃO DE DEFINIR AS ALTERAÇÕES, NO FINAL DA TRANSACTION, BASTA VOCE DAR UM COMMIT, O
--COMMIT SERA O AVAL PARA FINALIZAR E ACRESCENTAR ESSAS ALTERAÇÕES. TUDO O QUE FOI FEITO ANTES
--DO COMMIT, SERA VALIDADO DENTRO DA TABELA.

-- COMANDO ROLLBACK
--AGORA CASO VOCE TENHA FEITO O SCRIPT DE FORMA INCORRETA, OU ALGO APRESENTOU ERRO, BASTA DAR UM 
--ROLLBACK NO FINAL DA SUA TRANSAÇÃO, QUE ASSIM ELA NAO FARA A ALTERAÇÃO E AS INFORMAÇÕES DA TABELA NÃO SOFRERAM NADA.


-- CRIANDO UMA TABELA TEMPORARIA A PARTIR DOS REGISTRO DA TABELA PESSOAS
SELECT *
INTO Temp
FROM dbo.Pessoas;

SELECT * FROM Temp;

--COM COMMIT = ALTERAÇÃO SERÁ REALIZADA NA TABELA 
BEGIN TRAN;
    UPDATE Temp
	SET Sexo = 'F'
	WHERE Temp.ID_Pessoa = 2 
COMMIT;
-- COM ROLLBACK = ALTERAÇÃO NÃO SERÁ REALIZADA NA TBAELA
BEGIN TRAN 
	UPDATE Temp
    SET Sexo = 'F'
ROLLBACK;

--ENTAO BASICAMENTE O BEGIN TRAN SERVE BEM PARA PROTEGER OS DADOS DENTRO DE UMA TABELA.
--AINDA MAIS QUANDO ESSA TABELA TEM MUITA INFORMAÇÃO, PARA QUE NÃO SOFRA NENHUM TIPO DE ALTERAÇÃO INDESEJADA.

DROP TABLE TEMP;

-- VERIFICA A QUANTIDADE DE TRANSACTION RODANDO NA BASE 
-- LEMBRANDO QUE SEMPRE QUE EXECUTAMOS UMA TRANSACTION DEVEMOS FINALIZAR, COM O COMMIT PARA SALVAR AS ALTERAÇÕES
-- OU COM ROLLBACK CASO QUERIA DESFAZER AS ALTERAÇÕES 
SELECT @@TRANCOUNT

